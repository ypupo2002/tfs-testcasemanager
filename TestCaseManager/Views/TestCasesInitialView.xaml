<UserControl x:Class="TestCaseManagerApp.Views.TestCasesInitialView" Name="TestCaseInitialView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernU"
             xmlns:local="clr-namespace:TestCaseManagerApp.Views"
             mc:Ignorable="d" Loaded="TestCaseInitialView_Loaded_1">
    <Grid>
        <Grid.CommandBindings>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.EditCommand}" Executed="EditButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.DuplicateCommand}" Executed="DuplicateButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.PreviewCommand}" Executed="PreviewButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.NewCommand}" Executed="btnNew_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.RefreshCommand}" Executed="btnRefresh_Click"/>
        </Grid.CommandBindings>
        <ProgressBar Name="progressBar" Minimum="0" Maximum="1" Height="16" IsIndeterminate="True" Margin="0,0,0,16" />
        
        <Grid Name="mainGrid" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Search" Margin="10,0,10,30" Height="25" Width="150" FontWeight="Bold" FontSize="18" HorizontalAlignment="Left" Grid.Row="0"/>
                <Button Name="btnRefresh" Margin="10,0,10,30" Height="30" Width="90" VerticalAlignment="Center" Click="btnRefresh_Click">
                    <Button.Content>
                        <TextBlock>
                                  <Underline>R</Underline>efresh
                        </TextBlock>
                    </Button.Content>
                </Button>
            </StackPanel>
         
            <StackPanel Orientation="Vertical" Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Search By:" Margin="10,0,10,10" Height="25" Width="Auto" HorizontalAlignment="Left" Grid.Column="0"/>
                    <TextBox Name="tbIdFilter" Text="{Binding InitialViewFilters.IdFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="0" Margin="10,0,10,10" Height="25" Grid.Column="1" GotFocus="tbIdFilter_GotFocus" LostFocus="tbIdFilter_LostFocus" KeyUp="tbIdFilter_KeyUp" />
                    <TextBox Name="tbTitleFilter" Text="{Binding InitialViewFilters.TitleFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="1" Margin="10,0,10,10" Height="25" Grid.Column="2" GotFocus="tbTitleFilter_GotFocus" LostFocus="tbTitleFilter_LostFocus" KeyUp="tbTitleFilter_KeyUp"/>
                    <TextBox Name="tbSuiteFilter" Text="{Binding InitialViewFilters.SuiteFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="2" Margin="10,0,10,10" Height="25" Grid.Column="3" GotFocus="tbTextSuiteFilter_GotFocus" LostFocus="tbSuiteFilter_LostFocus" KeyUp="tbSuiteFilter_KeyUp"/>
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Hide Automated" Margin="10,0,10,30" Height="25" Width="Auto" HorizontalAlignment="Left"/>
                    <CheckBox Margin="10,0,10,30" HorizontalAlignment="Left" IsChecked="{Binding Path=HideAutomated, Mode=TwoWay}" Name="cbHideAutomated" Unchecked="cbHideAutomated_Unchecked" Checked="cbHideAutomated_Checked"/>
                </StackPanel>
            </StackPanel>

            <DataGrid ItemsSource="{Binding Path=ObservableTestCases}" AutoGenerateColumns="False" Name="dgTestCases" Grid.Row="2" MouseDoubleClick="dgTestCases_MouseDoubleClick" IsReadOnly="True" SelectionMode="Single" SelectionUnit="FullRow" TabIndex="3" PreviewKeyDown="dgTestCases_KeyDown">
                   <DataGrid.Columns>
                    <DataGridTextColumn Header="ID"  Binding="{Binding ITestCase.Id}" Width="0.5*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Title" Binding="{Binding ITestCase.Title}" Width="9*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Suite" Binding="{Binding ITestSuiteBase.Title}" Width="5*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Priority" Binding="{Binding ITestCase.Priority}" Width="1*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Automated" Binding="{Binding ITestCase.IsAutomated}" Width="1.2*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    </DataGrid.Columns>
            </DataGrid>
            
            <StackPanel Orientation="Vertical" Grid.Row="3" Margin="0,30,0,30">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Name="btn_Preview" Margin="0,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="PreviewButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>P</Underline>review
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btEdit" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="EditButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>E</Underline>dit
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnDuplicate" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="DuplicateButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>D</Underline>uplicate
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnNew" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="btnNew_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>N</Underline>ew
                            </TextBlock>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="4">
                <TextBlock Text="Test Case Count:" Margin="0,0,10,30" Height="25" Width="Auto" FontWeight="Bold"/>
                <TextBlock Name="tbTestCaseCount"  Text="{Binding TestCasesCount}" Margin="10,0,10,30" Height="25" Width="Auto" />
            </StackPanel>
        </Grid>
    </Grid>    
</UserControl>
