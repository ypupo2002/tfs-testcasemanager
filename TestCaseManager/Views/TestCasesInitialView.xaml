<UserControl x:Class="TestCaseManagerApp.Views.TestCasesInitialView" Name="TestCaseInitialView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernU"
             xmlns:local="clr-namespace:TestCaseManagerApp.Views"
             xmlns:entities="clr-namespace:TestCaseManagerApp.BusinessLogic.Entities"
             mc:Ignorable="d" Loaded="TestCaseInitialView_Loaded">
    <Grid>
        <Grid.CommandBindings>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.EditCommand}" Executed="EditButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.DuplicateCommand}" Executed="DuplicateButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.PreviewCommand}" Executed="PreviewButton_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.NewCommand}" Executed="btnNew_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.RefreshCommand}" Executed="btnRefresh_Click"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.RemoveTestCaseFromSuiteCommand}" Executed="removeTestCaseFromSuite_Command"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.RenameSuiteCommand}" Executed="renameSuite_Command"/>
            <CommandBinding Command="{x:Static local:TestCasesInitialView.AddSuiteCommand}" Executed="addSuite_Command"/>
        </Grid.CommandBindings>
        <ProgressBar Name="progressBar" Minimum="0" Maximum="1" Height="16" IsIndeterminate="True" Margin="0,0,0,16" />
        
        <Grid Name="mainGrid" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="250" Width="Auto"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="500" Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                <TextBlock Text="Search" Margin="10,0,10,30" Height="25" Width="150" FontWeight="Bold" FontSize="18" HorizontalAlignment="Left" Grid.Row="0"/>
                <Button Name="btnRefresh" Margin="10,0,10,30" Height="30" Width="90" VerticalAlignment="Center" Click="btnRefresh_Click">
                    <Button.Content>
                        <TextBlock>
                                  <Underline>R</Underline>efresh
                        </TextBlock>
                    </Button.Content>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Search By:" Margin="10,0,10,10" Height="25" Width="Auto" HorizontalAlignment="Left" Grid.Column="0"/>
                    <TextBox Name="tbIdFilter" Text="{Binding InitialViewFilters.IdFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="0" Margin="10,0,10,10" Height="25" Grid.Column="1" GotFocus="tbIdFilter_GotFocus" LostFocus="tbIdFilter_LostFocus" KeyUp="tbIdFilter_KeyUp" />
                    <TextBox Name="tbTitleFilter" Text="{Binding InitialViewFilters.TitleFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="1" Margin="10,0,10,10" Height="25" Grid.Column="2" GotFocus="tbTitleFilter_GotFocus" LostFocus="tbTitleFilter_LostFocus" KeyUp="tbTitleFilter_KeyUp"/>
                    <TextBox Name="tbSuiteFilter" Text="{Binding InitialViewFilters.SuiteFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="2" Margin="10,0,10,10" Height="25" Grid.Column="3" GotFocus="tbTextSuiteFilter_GotFocus" LostFocus="tbSuiteFilter_LostFocus" KeyUp="tbSuiteFilter_KeyUp"/>
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Hide Automated" Margin="10,0,10,30" Height="25" Width="Auto" HorizontalAlignment="Left"/>
                    <CheckBox Margin="10,0,10,30" HorizontalAlignment="Left" IsChecked="{Binding Path=HideAutomated, Mode=TwoWay}" Name="cbHideAutomated" Unchecked="cbHideAutomated_Unchecked" Checked="cbHideAutomated_Checked"/>
                </StackPanel>
            </StackPanel>

            <TreeView  Name="tvSuites" Grid.Row="1" Grid.Column="0" Grid.RowSpan="2"  SelectedValuePath="Id" ItemsSource="{Binding Suites}" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding Path=IsNodeExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        <EventSetter Event="TreeViewItem.MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick"/>
                        <EventSetter Event="TreeViewItem.Selected" Handler="treeViewItem_Selected"/>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem Name="tvSuitesContextItemEdit" Command="{x:Static local:TestCasesInitialView.RenameSuiteCommand}" Header="Rename"/>
                                    <MenuItem Name="tvSuitesContextItemAdd" Command="{x:Static local:TestCasesInitialView.AddSuiteCommand}" Header="Add"/>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>                 
                    <HierarchicalDataTemplate DataType="{x:Type entities:Suite}" ItemsSource="{Binding SubSuites}" >                     
                        <TextBlock Text="{Binding Path=Title}" FontSize="14"/>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>

            <GridSplitter Width="5" ResizeDirection="Auto" HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1"/>

            <ProgressBar Name="progressBarTestCases" Minimum="0" Maximum="1" Height="16" IsIndeterminate="True" Margin="0,0,0,16" Grid.Row="2" Grid.Column="2" Visibility="Hidden"/>
            <DataGrid ItemsSource="{Binding Path=ObservableTestCases}" AutoGenerateColumns="False" Name="dgTestCases" Grid.Row="2" Grid.Column="2" MouseDoubleClick="dgTestCases_MouseDoubleClick" IsReadOnly="True" SelectionMode="Extended"  SelectionUnit="FullRow" TabIndex="3" PreviewKeyDown="dgTestCases_KeyDown" SelectedCellsChanged="dgTestCases_SelectedCellsChanged">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Name="dgTestCaseContextItemEdit" Command="{x:Static local:TestCasesInitialView.EditCommand}" Header="Edit"/>
                        <MenuItem Name="dgTestCaseContextItemDuplicate" Command="{x:Static local:TestCasesInitialView.DuplicateCommand}" Header="Duplicate"/>
                        <MenuItem Name="dgTestCaseContextItemPreview" Command="{x:Static local:TestCasesInitialView.PreviewCommand}" Header="Preview"/>
                        <MenuItem Name="dgTestCaseContextItemRemove" Command="{x:Static local:TestCasesInitialView.RemoveTestCaseFromSuiteCommand}" Header="Remove"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID"  Binding="{Binding ITestCase.Id}" Width="1*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Title" Binding="{Binding ITestCase.Title}" Width="9*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Suite" Binding="{Binding ITestSuiteBase.Title}" Width="5*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Priority" Binding="{Binding ITestCase.Priority}" Width="1.5*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Automated" Binding="{Binding ITestCase.IsAutomated}" Width="2*">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                    </DataGridTextColumn>
                    </DataGrid.Columns>
            </DataGrid>
            
            <StackPanel Orientation="Vertical" Grid.Row="3" Grid.ColumnSpan="3" Margin="0,30,0,30">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Name="btnPreview" Margin="0,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="PreviewButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>P</Underline>review
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnEdit" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="EditButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>E</Underline>dit
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnDuplicate" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="DuplicateButton_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>D</Underline>uplicate
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnNew" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="btnNew_Click">
                        <Button.Content>
                            <TextBlock>
                                  <Underline>N</Underline>ew
                            </TextBlock>
                        </Button.Content>
                    </Button>
                    <Button Name="btnRemoveTestCase" Content="Remove" Margin="30,0,10,0" Height="30" Width="90" VerticalAlignment="Center" Click="btnRemoveTestCase_Click"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="4">
                <TextBlock Text="Test Case Count:" Margin="0,0,10,30" Height="25" Width="Auto" FontWeight="Bold"/>
                <TextBlock Name="tbTestCaseCount"  Text="{Binding TestCasesCount}" Margin="10,0,10,30" Height="25" Width="Auto" />
            </StackPanel>
        </Grid>
    </Grid>    
</UserControl>
